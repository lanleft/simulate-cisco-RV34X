#!/bin/sh
#. /lib/config/uci.sh

UTILITY_NAME="/tmp/utility-ping"
errcode=1
errstring="Invalid Arguments"
PING_UTILITY=
iface=
TYPE=$1

#Parse params
count=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "echo_count") {print $(I+1)};}'`
size=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "size") {print $(I+1)};}'`
ttl=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "ttl") {print $(I+1)};}'`
timeout=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "timeout") {print $(I+1)};}'`
version=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "ip_version") {print $(I+1)};}'`
interface=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "interface") {print $(I+1)};}'`
target=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "target") {print $(I+1)};}'`

mapping ()
{
	case "$1" in
		VLAN1)			echo "vlan1";;
		WAN1)			echo "wan1";;
		WAN1-PPPOE:0)	echo "wan1p";;
		WAN1-PPPOE:1)	echo "wan1p";;
		WAN1-PPPOE:2)	echo "wan1p";;
		WAN1-PPPOE:3)	echo "wan1p";;
	esac
}

get_interface ()
{
	interface=`mapping $interface`

	if [ "$version" = "ipv4" ];then
		    iface=$interface
	else
		    iface=$(echo $interface | sed s/wan[1-9]*/\&6/g)
	fi

	ubus list | sed -ne 's/^network\.interface\.//p' | grep $iface >/dev/null 2>&1

	errcode=$?

	if [ "$errcode" -ne 0 ];then
		echo ""
	else
		iface=$(ubus call network.interface.$iface status | grep \"device\" | cut -d\" -f 4)
		echo $iface
	fi
}

start_ping() {
	#Prepare ping command
	if [ -n "$version" ];then
		if [ "$version" = "ipv4" ];then
			PING_UTILITY=ping	
		else
			PING_UTILITY=ping6
		fi
	else
		value=`echo $target | egrep "(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))"`
		if [ -n "$value" ];then
			PING_UTILITY=ping6
		else
			PING_UTILITY=ping
		fi
	fi

	PING_COMMAND=$PING_UTILITY
	if [ -z "$count" ];then
		count=4
	fi
	PING_COMMAND=$PING_COMMAND" -c "$count

	if [ -n "$size" ];then
		PING_COMMAND=$PING_COMMAND" -s "$size
	fi


	if [ -n "$ttl" ];then
		if [ "$PING_UTILITY" = "ping" ];then
			PING_COMMAND=$PING_COMMAND" -t "$ttl
		fi
	fi


	if [ -n "$timeout" ];then
		if [ "$PING_UTILITY" = "ping" ];then
			PING_COMMAND=$PING_COMMAND" -w "$timeout
		fi
	fi

	if [ -n "$interface" ];then
		iface="`get_interface`"
		if [ -n "$iface" ];then
			PING_COMMAND=$PING_COMMAND" -I "$iface
		fi
	fi

	PING_COMMAND=$PING_COMMAND" "$target

	# Prepare Output
	`$PING_COMMAND > $UTILITY_NAME 2>&1 &`
	errcode=$?

	if [ -n "$interface" ] && [ -z "$iface" ];then
		errcode=1
		errstring="Interface not found"
	else
		if [ "$errcode" -ne 0 ];then
			errcode=1
			errstring="Ping Failed"
		else
			errstring="Success"
		fi
	fi

	echo "code $errcode errstr $errstring"
}

stop_ping() {
	exist_ping=`pgrep ping`
	exist_ping6=`pgrep ping6`
	
	if [ -z "$exist_ping" ] && [ -z "$exist_ping6" ];then
		errcode=1
		errstring="Ping is not executing"
	else
		`killall -9 ping ping6 >/dev/null 2>&1`

		errcode=0
		errstring="Success"
	fi

	echo "code $errcode errstr $errstring"
}

get_ping_status() {
	text=`cat $UTILITY_NAME 2>/dev/null`
	errcode=$?
	if [ "$errcode" -ne 0 ];then
		errstring="Ping failed"
	else
		errstring="Success"
	fi
	
	exist_ping=`pgrep ping`
	exist_ping6=`pgrep ping6`
	if [ -z "$exist_ping" ] && [ -z "$exist_ping6" ];then
		is_final=true
	else
		is_final=false
	fi

	echo "code $errcode errstr $errstring text $text is_final $is_final"
}

case "$TYPE" in
	start)
		start_ping
	;;
	stop)
		stop_ping
	;;
	status)
		get_ping_status
	;;
esac
