################################################################################
# Copyright (c) 2015-17 by Cisco Systems, Inc.
# All rights reserved.
#
# Author: Shaurin Desai <shaurdes@cisco.com>
################################################################################
"""Error Constants for PnP Services.

This file contains the implementation of the ServiceErrorInfo class and error
constants for PnP Services. PnP Services must only use these error codes, as
defined in the PnP Schema.

Notes:
    Many of the error codes provided in this file are only relevant for IOS. If
    an error occurs during a service run and none of the provided error codes
    are relevant, use 'INTERNAL'. It is not required for all error codes to be
    used in a service implementation, especially if irrelevant to a POSIX
    platform.

Attributes:
    BACKOFF_ERRORS (tuple(str)): Error codes for Backoff PnP Service

    CAPABILITY_ERRORS (tuple(str)): Error codes for Capability PnP Service

    CERTIFICATE_INSTALL_ERRORS (tuple(str)): Error codes for Certificate-Install
        PnP Service

    CLI_CONFIG_ERRORS (tuple(str)): Error codes for CLI-Config PnP Service

    CLI_EXEC_ERRORS (tuple(str)): Error codes for CLI-Exec PnP Service

    CONFIG_UPGRADE_ERRORS (tuple(str)): Error codes for Config-Upgrade PnP
        Service

    DEVICE_AUTH_ERRORS (tuple(str)): Error codes for Device-Auth PnP Service

    DEVICE_INFO_ERRORS (tuple(str)): Error codes for Device-Info PnP Service

    IMAGE_INSTALL_ERRORS (tuple(str)): Error codes for Image-Install PnP Service

    INTERFACE_INFO_ERRORS (tuple(str)): Error codes for Interface-Info PnP
        Service

    REDIRECTION_ERRORS (tuple(str)): Error codes for Redirection PnP Service

    SCRIPT_ERRORS (tuple(str)): Error codes for Script PnP Service

    TOPOLOGY_ERRORS (tuple(str)): Error codes for Topology PnP Service

Todo:
    * Provide error codes for remaining PnP Services
    * Add more error codes for POSIX platforms and update Schemas accordingly

"""
from pnp.infra.errors import ErrorInfo, DEVICE_INFO_API_ERRORS, SUDI_API_ERRORS


class ServiceActionError(Exception):
    """ServiceAction execution error (inherits from Exception)"""
    pass


class ServiceErrorInfo(ErrorInfo):
    """Error Information for service run"""
    def __init__(self, name, sev, code_, msg):
        super(ServiceErrorInfo, self).__init__(name, sev, code_, msg,
                                               _SERVICE_ERROR_CODES)

################################################################################
#
# Service Error Constants
#
################################################################################
ERROR_CODE_STRING_TEMPLATE = 'PnP Service Error %d'


def __create_error_code_dict(error_codes, error_number_start):
    return {error_string: ERROR_CODE_STRING_TEMPLATE % error_code
            for error_code, error_string
            in enumerate(error_codes, start=error_number_start)}

BACKOFF_ERRORS = (
    'INTERNAL',
    'UNSUPPORTED',
    'REQ'
)

# no errors for capability are outlined in PnP Schema
CAPABILITY_ERRORS = (
    'INTERNAL',
    'UNSUPPORTED',
    'REQ'
)

CERTIFICATE_INSTALL_ERRORS = (
    'REQ',
    'MULTIPLE_SERVER_ADDR',
    'MALLOC',
    'INVALID_XMPP',
    'SERVER_JID_MISSING',
    'WRONG_RECONNECT_TIMER',
    'WRONG_PRIMARY_TRANSPORT',
    'BLOCKING_MODE',
    'NTP_NOT_CONFIGURED',
    'CLOCK_NOT_SET',
    'NULL',
    'MULTIPLE_CLOCK_TYPE',
    'TRUSTPOOL_NOT_CONFIGURED',
    'TRUSTPOINT_NOT_CONFIGURED',
    'TRUSTPOOL_NOT_UNCONFIGURED',
    'TRUSTPOINT_NOT_UNCONFIGURED',
    'INVALID_PROFILE_NAME',
    'CANT_ALLOC_RECONFIG',
    'STALE_RECONFIG_DATA',
    'INVALID_CMD_PROFILE',
    'WRONG_PRIMARY_AUTHEN',
    'WRONG_PRIMARY_RECONNECT',
    'WRONG_BACKUP_TRANSPORT',
    'WRONG_BACKUP_AUTHEN',
    'WRONG_BACKUP_RECONNECT',
    'WRONG_IP_TYPE',
    'CANT_SET_PROFILE_CMD',
    'CANT_FORMAT_URL',
    'CANT_START_PKI_SESSION',
    'CANT_END_PKI_SESSION',
    'CANT_CHECK_REVOCATION',
    'CANT_IMPORT_CA_CERT',
    'CANT_IMPORT_TRUSTPOOL',
    'FAIL_TO_IMPORT_TRUSTPOOL',
    'CANT_DELETE_TRUSTPOINT',
    'CANT_DELETE_TRUSTPOOL',
    'CANT_FIND_REPLACEMENT',
    'CANT_GET_HELLO_RESPONSE',
    'SIGNATURE_VERIFY_FAILED',
    'CANT_OVERWRITE_TRUSTPOINT',
    'CANT_REMOVE_BAD_CERT',
    'SRVR_ID_CHECK_FAILED',
    'NO_URL',
    'INVALID_SOURCE_FILE',
    'NO_MALLOC_MEMORY',
    'COPY_TO_DISK_FAILED',
    'OUT_OF_DISK_MEMORY'
)


CLI_CONFIG_ERRORS = (
    'INTERNAL',
    'UNSUPPORTED',
    'EXT_UNSUPPORTED',
    'REQ'
)

CLI_EXEC_ERRORS = (
    'INTERNAL',
    'UNSUPPORTED',
    'CANT_ALLOC_CSB',
    'INVALID_DIALOG',
    'CANT_INITIALIZE_DATA',
    'CANT_PROCESS_DATA',
    'CANT_ALLOC_RESULT',
    'CANT_FORMAT_PIPED_CLI',
    'CANT_FIND_ODM_SPEC_FILE',
    'CANT_SETUP_REDIRECT',
    'CANT_REDIRECT_OUTPUT',
    'STDIO_INTERRUPTION',
    'CSB_INTERRUPTION',
    'AUTHORIZATION_FAILED',
    'INVALID_CLI',
    'REQ'
)

CONFIG_UPGRADE_ERRORS = (
    'INTERNAL',
    'UNSUPPORTED',
    'APPLY_CFG_REQ_ERROR',
    'APPLY_CFG_HASH_FAILED',
    'APPLY_CFG_COPY_FAILED',
    'APPLY_CFG_FILE_TYPE_FAILED',
    'CONFREG_SET_TO_0x0',
    'STARTUP_CFG_COPY_FAILED',
    'EXT_UNSUPPORTED',
    'NO_SERVICE_DATA',
    'SYNTAX_ERROR',
    'CONFIG_LOCKED',
    'RUNNING_CFG_COPY_FAILED',
    'INVALID_INPUT_DETECTED',
    'BOOT_MANUAL_CONFIGURED',
    'CAN_NOT_RELOAD',
    'INVALID_SRC_CONFIG_FILE',
    'INVALID_STARTUP_ACCESS',
    'INVALID_RUNNING_ACCESS',
    'CANT_START_BACKUP',
    'CANT_UPGRADE_STARTUP_VIA_BACKUP',
    'CANT_UPGRADE_STARTUP_DIRECTLY',
    'CANT_UPGRADE_RUNNING_VIA_BACKUP',
    'CANT_UPGRADE_RUNNING_DIRECTLY',
    'CANT_MALLOC_ACTION_VTY',
    'REQ'
)

DEVICE_AUTH_ERRORS = SUDI_API_ERRORS

DEVICE_INFO_ERRORS = DEVICE_INFO_API_ERRORS

IMAGE_INSTALL_ERRORS = (
    'INTERNAL',
    'UNSUPPORTED',
    'SRC_NOT_PROVIDED',
    'SRC_NOT_FOUND',
    'INVALID_EXECUTABLE',
    'CONFREG_SET_TO_0x0',
    'INVALID_IMAGE_FORMAT',
    'UNABLE_TO_PARSE_PATH',
    'ADD_DEFAULT_FILENAME_FAILED',
    'RELOAD_INPUT_ERROR',
    'RELOAD_INPUT_ERROR',  # These last two are the same (error in schema)
    'UNKNOWN_RELOAD_ERROR',
    'IMG_SIGNATURE_NOT_PRESENT',
    'IMG_SIGNATURE_NOT_VALID',
    'IMG_SIGNATURE_ALG_NOT_SUPP',
    'IMG_SIGNATURE_GEN_FAILURE',
    'IMG_SIGNATURE_VERIFY_FAILED',
    'IMG_SIGNATURE_VERIFIED',
    'DEST_STAT_FAILED',
    'STARTUP_CFG_COPY_FAILED',
    'FILE_OPEN_FAILED',
    'FILE_WRITE_FAILED',
    'CFG_IMG_FAILED',
    'SRC_FILE_OPEN_FAILED',
    'INVALID_DEST_FS',
    'NO_SPACE_ON_DEST_FS',
    'INSTALLER_API_FAILED',
    'INSTALLER_API_MISSING',
    'FS_PREFIX_MALLOC_FAILED',
    'IMG_COPY_FAILED',
    'COPY_TO_STANDBY_FAILED',
    'CANNOT_RUN_ON_STANDBY',
    'DEVICE_NOT_IN_VSS_MODE',
    'REQ'
)

INTERFACE_INFO_ERRORS = (
    'INTERNAL',
    'UNSUPPORTED',
    'SERVICE_FAILED',
    'REQ'
)

REDIRECTION_ERRORS = (
    'REQ',
    'INTERNAL',
    'EXT_REQ_UNSUPPORTED',
    'UNSUPPORTED',
    'EXT_REQ_INVALID_REQ',
    'EXT_REQ_INVALID_PROTOCOL',
    'NO_SERVICE_DATA',
    'FAIL_NAME_CREATE',
    'FAIL_PROFILE_CREATE',
    'FAIL_PROFILE_CONFIG',
    'WRONG_PRIMARY_TRANSPORT',
    'FAIL_PRIMARY_TRANSPORT',
    'FAIL_PRIMARY_AUTHENTICATION',
    'FAIL_PRIMARY_RECONNECT_TIMER',
    'FAIL_BACKUP_HTTP_TRANSPORT',
    'FAIL_BACKUP_HTTPS_TRANSPORT',
    'FAIL_BACKUP_XMPP_TRANSPORT',
    'FAIL_BACKUP_XMPP_CMD_CREATE',
    'FAIL_BACKUP_AUTHENTICATION',
    'FAIL_BACKUP_RECONNECT_TIMER',
    'FAIL_BACKUP_RECONNECT_CREATE',
    'WRONG_IP_HOST_OPTION',
    'FAIL_ADDR_CREATE',
    'WRONG_IPV4',
    'WRONG_IPV6',
    'MISSING_SERVER_ADDRESS',
    'FAIL_SOURCE_CREATE',
    'FAIL_VRF_CREATE',
    'FAIL_CLI_CREATE',
    'FAIL_LOCAL_CERT_CREATE',
    'FAIL_REMOTE_CERT_CREATE',
    'WRONG_XMPP_TRANSPORT',
    'FAIL_SASL_CREATE',
    'FAIL_JID_CREATE',
    'MISSING_JID',
    'WRONG_RANDOM_CONFIG',
    'FAIL_RECONNECT_TIMER_CREATE',
    'PNP_SERVERS_UNREACHABLE',
    'PRIMARY_PNP_SERVER_UNREACHABLE',
    'BACKUP_PNP_SERVER_UNREACHABLE',
    'PRIMARY_PNP_SERVER_ID_ERROR',
    'PRIMARY_PNP_SERVER_CERT_ERROR',
    'CANT_GET_HELLO_RESPONSE',
    'VDAEMON_UNAVAILABLE',
    'VBOND_UNREACHABLE',
    'VBOND_CERT_NOT_FOUND',
    'VBOND_DTLS_FAILURE'
)

SCRIPT_ERRORS = (
    'INTERNAL',
    'UNSUPPORTED',
    'EXEC_FAILED',
    'FILE_OPEN_FAILED',
    'UNABLE_TO_CREATE_FILE_IMG',
    'FILE_READ_FAILED',
    'UNEXPECTED_FILE_TYPE',
    'UNKNOWN_ERROR',
    'REQ'
)

TOPOLOGY_ERRORS = (
    'TOPOLOGY_INTERNAL',
    'TOPOLOGY_UNSUPPORTED',
    'TOPOLOGY_NO_ENTRY_IN_CDP_CACHE',
    'QUEUE_INIT_ERROR',
    'INIT_ERROR',
    'NEIGHBOR_MALLOC_ERROR',
    'UNEXPECTED_PNP_RESPONSE',
    'CANT_GET_PNP_RESPONSE_ACK',
    'CANT_MALLOC_TOPOLOGY_DATA',
    'CANT_MALLOC_TOPOLOGY_ELEMENT',
    'CANT_ADD_ELEMENT_TO_TOPOLOGY',
    'CANT_FIND_VALID_ELEMENT',
    'CANT_MALLOC_LOCAL_INTERFACE',
    'CANT_MALLOC_LOCAL_S_INTERFACE',
    'CANT_MALLOC_LOCAL_MAC_ADDRESS',
    'CANT_MALLOC_REMOTE_INTERFACE',
    'CANT_MALLOC_REMOTE_S_INTERFACE',
    'CANT_MALLOC_REMOTE_MAC_ADDRESS',
    'CANT_MALLOC_REMOTE_DEVICE_NAME',
    'CANT_MALLOC_REMOTE_PLATFORM',
    'CANT_MALLOC_REMOTE_VERSION',
    'CANT_MALLOC_REMOTE_UDI',
)

# no errors for tag are outlined in PnP Schema
TAG_ERRORS = (
    'INTERNAL',
    'UNSUPPORTED',
    'REQ'
)

_SERVICE_ERROR_CODES = dict(
    cli_config=__create_error_code_dict(CLI_CONFIG_ERRORS, 1200),
    cli_exec=__create_error_code_dict(CLI_EXEC_ERRORS, 1300),
    config_upgrade=__create_error_code_dict(CONFIG_UPGRADE_ERRORS, 1400),
    device_info=__create_error_code_dict(DEVICE_INFO_ERRORS, 1600),
    image_install=__create_error_code_dict(IMAGE_INSTALL_ERRORS, 1800),
    script=__create_error_code_dict(SCRIPT_ERRORS, 2500),
    backoff=__create_error_code_dict(BACKOFF_ERRORS, 3000),
    redirection=__create_error_code_dict(REDIRECTION_ERRORS, 3100),
    certificate_install=__create_error_code_dict(CERTIFICATE_INSTALL_ERRORS,
                                                 3300),
    device_auth=__create_error_code_dict(DEVICE_AUTH_ERRORS, 3400),
    interface_info=__create_error_code_dict(INTERFACE_INFO_ERRORS, 3900),
    topology=__create_error_code_dict(TOPOLOGY_ERRORS, 2900),
    # no errors for tag
    tag=__create_error_code_dict(TAG_ERRORS, 2000),
    # no errors for capability
    capability=__create_error_code_dict(CAPABILITY_ERRORS, 0)
)
