################################################################################
# Copyright (c) 2015-17 by Cisco Systems, Inc.
# All rights reserved.
#
# Author: Shaurin Desai <shaurdes@cisco.com>
################################################################################
"""PnP Service: Device-Auth

DeviceAuth interacts with the SUDI API to provide a challenge response to the
challenge request sent in the Device-Authentication Work-Request.

Todo:
    * Enable support for MIC

"""
from pnp.infra.system.sudi import SUDI
from pnp.service.api.pnp_service import PnPService


class DeviceAuth(PnPService):
    """PnP Service: Device-Auth"""

    def run(self):
        """Generates the Device-Auth Work-Response."""
        # Extract values from work request
        challenge_request = self.request['deviceAuth']['challenge-request']
        encryption_method = self.request['deviceAuth']['encryption-method']
        hash_method = self.request['deviceAuth']['hash-method']
        # Calling system API to retrieve challenge response and SUDI-cert
        sudi_response = SUDI.challenge_sudi(challenge_request,
                                            encryption_method.split(','),
                                            hash_method.split(','))
        if sudi_response:
            self.logger.info('Device Authentication challenge response and '
                             'sudi cert generated successfully.')
            self.success = True
            auth = {
                'challenge-response': sudi_response.get('challenge_response'),
                'sudi-cert': sudi_response.get('sudi_cert'),
                'encryption-method': sudi_response.get('encryption_method'),
                'hashing-method': sudi_response.get('hash_method')
            }
            self.response['auth'] = auth
        else:
            self.success = False
            self.set_error_info(SUDI.error_info.severity, SUDI.error_info.code,
                                SUDI.error_info.message)
