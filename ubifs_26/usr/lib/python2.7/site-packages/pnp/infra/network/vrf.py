################################################################################
# Copyright (c) 2015-17 by Cisco Systems, Inc.
# All rights reserved.
#
# Author: Shaurin Desai <shaurdes@cisco.com>
################################################################################
"""Virtual Routing and Forwarding

This file provides access to the VRF API implementation found in the
pnp_platform module. If the API implementation is not found, it is not
guaranteed that a PnP Device can establish a connection with a PnP Server.

Note:
    This file should be the ONLY file to import from the VRF API implementation
    provided by pnp_platform.infra.vrf. Any pnp files making calls to the VRF
    API should import this file and redefine the imported objects, if necessary.

Todo:
    * Create decorator for setting vrf (can be used on any func using urllib2)

"""
from pnp.infra.api.pnp_infra import PnPInfra
try:
    from pnp_platform.infra.vrf import VRF
    if not issubclass(VRF, PnPInfra):
        raise ImportError("VRF implementation does not conform to PnPInfra API")
except ImportError:
    from pnp.infra.api.vrf import VRF

# Enhancement: change to decorator
if False:
    import socket
    def _bind_alt_socket(interface_name=''):
        true_socket = socket.socket
        def _bound_socket(*a, **k):
            sock = true_socket(*a, **k)
            sock.bind((interface_name, 0))
            return sock
        socket.socket = _bound_socket
