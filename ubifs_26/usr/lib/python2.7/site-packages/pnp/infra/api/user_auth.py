# pylint: disable=unused-argument
################################################################################
# Copyright (c) 2015-17 by Cisco Systems, Inc.
# All rights reserved.
#
# Author: Shaurin Desai <shaurdes@cisco.com>
################################################################################
"""PnP Infra API: User Authentication

This file serves as User Authentication API signature.

This API is optional for platforms to implement. This API is called by the PnP
Agent when attempting to authenticate a username/password that is provided in
the PnP Work-Request XML payload.

Note:
    User Authentication is different from AAA.

Todo:
    * Finalize user authentication requirements in PnP Solution.
    * Investigate AAA requirements

"""
from pnp.infra.api.pnp_infra import PnPInfra
from pnp.infra.errors import SEVERITY_WARNING


class UserAuth(PnPInfra):
    """PnP Infra API: User Authentication

    Useful methods and attributes inherited from PnPInfra:
        * logger: Logger to be used for logging by PnP Infra API implementation.
        * set_error_info(): Method to be used by PnP Infra API implementation
            for reporting error/warning information.

    """
    auth_required = False

    @classmethod
    def is_auth_required(cls):
        """Determines if user authentication is required. This can depend on the
        configuration state of the system.

        Returns:
            bool: True, if user authentication is required. False, otherwise.

        """
        cls.set_error_info(SEVERITY_WARNING, 'UNSUPPORTED',
                           "API implementation not available")
        return cls.auth_required

    @classmethod
    def authenticate_user(cls, user, password):
        """Authenticates provided user and password.

        Args:
            user (str): Username to authenticate.
            password (str): Password used to verify user identity.

        Returns:
            bool: True, if user has been authenticated. False, if provided user
                and password are not authentic.

        """
        cls.set_error_info(SEVERITY_WARNING, 'UNSUPPORTED',
                           "API implementation not available")
        return False

    @classmethod
    def set_auth_required(cls):
        """Notifies platform that user authentication will be enforced by PnP.

        Returns:
            bool: True, if platform API was called successfully and User
                    Authentication has been enabled. False, otherwise.

        """
        cls.set_error_info(SEVERITY_WARNING, 'UNSUPPORTED',
                           "API implementation not available")
        return False

    # Agent has not yet been enhanced to check user privilege. Implementation is
    # not required as of now.
    @classmethod
    def has_command_privilege(cls, user, command):
        """Determines the user privilege level for executing commands. Checks if
        the user has the privilege level to execute the specified command.

        Called in platform-dependent CLI-Exec or CLI-Config implementation. Not
        required to implement this function if platform does not support remote
        CLI execute or configure commands.

        Args:
            user (str): Username to check privilege for.
            command (str): The command that user is trying to execute.

        Returns:
            bool: True, if user has the privilege to execute the specified
                command. False, otherwise.

        """
        pass

    # Agent has not yet been enhanced enforce user privilege. Implementation is
    # not required as of now.
    @classmethod
    def get_user_privilege(cls, user):
        """Returns the user privilege level. The privilege level can be used to
        determine if user has the ability to fulfill a PnP Service request.

        Args:
            user (str): Username to fetch privilege level for.

        Returns:
            int: Privilege level for specified user. Level is in range [1, 15].

        """
        pass
