################################################################################
# Copyright (c) 2015-17 by Cisco Systems, Inc.
# All rights reserved.
#
# Author: Shaurin Desai <shaurdes@cisco.com>
################################################################################
"""Objects

This file contains type and object definitions not provided by the Python
standard library.

"""


class Singleton(type):
    """Singleton type"""
    _instances = dict()

    def __call__(cls, *args, **kwargs):
        if cls not in cls._instances:
            cls_instance = super(Singleton, cls).__call__(*args, **kwargs)
            cls._instances[cls] = cls_instance
        return cls._instances[cls]


class classproperty(object):  # pylint: disable=invalid-name,too-few-public-methods
    """classproperty

    Like a regular property, except accessible at the class-level as opposed to
    the instance-level.
    """
    def __init__(self, getter):
        self.getter = getter

    def __get__(self, instance, owner):
        return self.getter(owner)
