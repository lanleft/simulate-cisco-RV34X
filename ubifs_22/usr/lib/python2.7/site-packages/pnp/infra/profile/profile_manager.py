################################################################################
# Copyright (c) 2015-17 by Cisco Systems, Inc.
# All rights reserved.
#
# Author: Shaurin Desai <shaurdes@cisco.com>
################################################################################
"""PnP Profile Manager

Class to manage different PnP Profiles

"""
from collections import OrderedDict
from logging import getLogger

from pnp.infra.objects import Singleton
from pnp.infra.profile.profile import Profile


class ProfileManager(OrderedDict):
    """ProfileManager is a Singleton that manages PnP Profiles"""
    __metaclass__ = Singleton

    logger = getLogger('pnp.infra.ProfileManager')

    def add_profile(self, profile):
        """Adds one profile to profile manager database.

        Args:
            profile (Profile): Profile instance to add to Profile Manager

        """
        if not isinstance(profile, Profile):
            raise TypeError("Profile Manager only supports Profile-type")
        elif OrderedDict.has_key(self, profile.name):
            raise ValueError("Profile Manager already contains profile with "
                             "name %s" % profile.name)
        OrderedDict.__setitem__(self, profile.name, profile)

    def terminate_profile(self, profile_name):
        """Terminates the specified profile and removes from Profile Manager.

        Args:
            profile_name (str): Profile name.

        """
        try:
            OrderedDict.pop(self, profile_name)
        except KeyError:
            self.logger.exception("profile_name (%s) not registered with "
                                  "Profile Manager", profile_name)

    def __getitem__(self, profile_name):
        """Retrieves PnP Profile object for specified profile.

        Args:
            profile_name (str): Name of PnP Profile to retrieve.

        Returns:
            Profile: Profile instance with the specified name.

        """
        return OrderedDict.__getitem__(self, profile_name)

    def __str__(self):
        out_str = "Profile(s) managed by ProfileManager: %s"
        return out_str % ", ".join(OrderedDict.iterkeys(self))
