# pylint: disable=unused-variable
################################################################################
# Copyright (c) 2017 by Cisco Systems, Inc.
# All rights reserved.
#
# Author: Andrew Au <aau@cisco.com>
################################################################################
"""Script execution API used by the Script Service support
This file provides the API signature for script execution.

This API serves as the interface for communicating PnP script execution details
to the PnP Agent. It is relied upon by the PnP Agent, PnP Services, and other
PnP infra components.
"""

from pnp.infra.api.pnp_infra import PnPInfra

class ScriptExec(PnPInfra):
    """PnP Script exec API
    These are the methods for executing script as supported in the Script
    Service
    """
    @classmethod
    def python_script_execute(cls, pscript_file, wait_time, args=""): #pylint: disable=unused-argument
        """This function executes the given python script with the provided
        argument together.

        Args:
            pscript_file (str): the absolute path to where the script
                file is located
            wait_time (str): max wait time for the script to complete
                executing
            args (str, optional): the input arguments for running with the
                script

        Returns:
            int: the script execution's return code
        """
        return -1

    @classmethod
    def tcl_script_execute(cls, pscript_file, wait_time, args=""): #pylint: disable=unused-argument
        """This function executes the given TCL script with the provided
        argument together.

        Args:
            pscript_file (str): the absolute path to where the script
                file is located
            wait_time (str): max wait time for the script to complete
                executing
            args (str, optional): the input arguments for running with the
                script

        Returns:
            int: the script execution's return code
        """
        return -1

    @classmethod
    def script_download(cls, script_path, archive_file):  #pylint: disable=unused-argument
        """This function downloads the script from the given absolute path
        and saves it into the given archive file path.

        Args:
            script_path (str): the absolute path to where the script
                file is to be downloaded from
            archive_file (str): the absolute path to where this
                downloaded file is locally archived

        Output:
            the script file being downloaded into a local archive

        Returns:
            (str) the download's error cause if any; None if successful
        """
        return "UNSUPPORTED"
