# pylint: disable=unused-argument
################################################################################
# Copyright (c) 2015-17 by Cisco Systems, Inc.
# All rights reserved.
#
# Author: Shaurin Desai <shaurdes@cisco.com>
################################################################################
"""PnP Infra API: vBond

This file serves as the vBond API signature. The vBond API is used by the PnP
Agent as an interface for communicating vBond details to the PnP platform. This
API is only necessary to implement for platforms which support vBond connections
through a client like vDaemon.

Note:
    Most PnP platforms cannot provide an implementation for this API. It is
    only required for platforms that will be supported by the Viptela solution.

"""
from pnp.infra.api.pnp_infra import PnPInfra
from pnp.infra.errors import SEVERITY_ERROR, VBOND_API_ERRORS  # pylint: disable=unused-import


class VBond(PnPInfra):
    """PnP Infra API: vBond

    Useful methods and attributes inherited from PnPInfra:
        * logger: Logger to be used for logging by PnP Infra API implementation
        * set_error_info(): classmethod to be used by PnP Infra API
            implementation for reporting error/warning information.

    """

    @classmethod
    def update_vbond_config(cls, org, protocol, address, port, cert_path=''):
        """Pushes vBond controller connectivity details to platform.

        Args:
            org (str): Organization name for vBond controller
            protocol (str): Protocol for vBond controller (usually 'dtls')
            address (tuple(str, str)): Tuple of address-type (ipv4, ipv6, host)
                and address string
            port (int): Port number to use for vBond controller
            cert_path (str, optional): Path to the certificate used to establish
                TLS connection with vBond controller. Default is '' (no cert).

        Returns:
            bool: True if configuration pushed successfully, False otherwise.

        """
        # Supported error info codes are listed in VBOND_API_ERRORS
        cls.set_error_info(severity=SEVERITY_ERROR, code='UNSUPPORTED',
                           msg='vBond API implementation not found')
        cls.logger.error('vBond controller is not supported by this device')
        return False
