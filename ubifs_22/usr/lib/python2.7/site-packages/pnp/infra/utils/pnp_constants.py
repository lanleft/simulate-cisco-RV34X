# pylint: disable=unused-import
################################################################################
# Copyright (c) 2015-17 by Cisco Systems, Inc.
# All rights reserved.
#
# Author: Shaurin Desai <shaurdes@cisco.com>
################################################################################
"""PnP Constants

This file contains constants for the pnp module.

To minimize other pnp submodules importing directly from the pnp_platform
module, reasonably import whatever constants/flags from the pnp_platform module
in this file.
"""
################################################################################
#
# PnP Constants
#
################################################################################
from os.path import abspath, dirname

from pnp import __file__ as _pnp_base, __version__ as __pnp_version__
try:
    from pnp_platform import __platform__ as PNP_PLATFORM
    from pnp_platform import __version__ as PNP_PLATFORM_VERSION
except ImportError:
    PNP_PLATFORM = 'PI'
    PNP_PLATFORM_VERSION = __pnp_version__

# Default values for generating a correlator
PNP_NAME = 'Cisco-PnP-POSIX-%s' % PNP_PLATFORM
PNP_VERSION = __pnp_version__

# PnP module base directory
PNP_BASE_DIR = dirname(abspath(_pnp_base))

# Default PnP Profile name for POSIX PnP Agent
PNP_PROFILE = '1'

################################################################################
#
# File Path config list
#
################################################################################
try:
    from pnp_platform.infra.platform_constants import (FILE_PATHS,
                                                       PLATFORM_FILE_PATHS)
except ImportError:
    from pnp.infra.api.platform_constants import (FILE_PATHS,
                                                  PLATFORM_FILE_PATHS)

PNP_FILE_PATHS_CONFIG = [FILE_PATHS, PLATFORM_FILE_PATHS]

################################################################################
#
# Logging
#
################################################################################
try:
    from pnp_platform.infra.platform_constants import (LOG_BACKUP_COUNT,
                                                       LOG_MAX_BYTES,
                                                       LOG_MSG_FORMAT)
except ImportError:
    from pnp.infra.api.platform_constants import (LOG_BACKUP_COUNT,
                                                  LOG_MAX_BYTES, LOG_MSG_FORMAT)

################################################################################
#
# Discovery Constants
#
################################################################################
# CCO Discovery timer names
CCO_BACKOFF_TIMER = 'cco_backoff'
CCO_DISCOVERY_TIMER = 'cco_discovery'

# Set to False to prevent connections to CCO Server (PnP Connect)
CCO_ENABLED = True
# Fixed FQDN of CCO Server used during CCO Discovery and CCO Provisioning
CCO_SERVER_HOSTNAME = 'devicehelper.cisco.com.'

# Discovery codes for PnP Discovery mechanisms
CBTYPE_USER = 0
CBTYPE_DHCP = 1
CBTYPE_DNS = 2
CBTYPE_CCO = 3

################################################################################
#
# PnP Protocol Constants
#
################################################################################
BACKOFF_DEFAULT = 60
CALLBACK_AFTER_DEFAULT = 900

################################################################################
#
# PnP platforms with official support
#
################################################################################
PNP_PLATFORM_CHEETAH_NAME = 'cheetah'
PNP_PLATFORM_SMB_NAME = 'smb'
PNP_PLATFORM_NFVIS_NAME = 'nfvis'
PNP_PLATFORM_NXOS_NAME = 'nxos'
PNP_PLATFORM_REFERENCE_NAME = 'reference'

################################################################################
#
# Transport and Protocol
#
################################################################################
# Set IPv6 enabled flag based off platform
try:
    from pnp_platform.infra.platform_constants import IPV6_ENABLED
except ImportError:
    from pnp.infra.api.platform_constants import IPV6_ENABLED

# The string representations of PnP address types IPv4, IPv6, host
PNP_ADDRTYPE_IPV4 = 'ipv4'
PNP_ADDRTYPE_IPV6 = 'ipv6'
PNP_ADDRTYPE_HOST = 'host'

# The string representations of PnP transport types: http and https
PNP_TRANSTYPE_HTTP = 'http'
PNP_TRANSTYPE_HTTPS = 'https'

# URL resolver timers
try:
    from pnp_platform.infra.platform_constants import (CCO_URL_RESOLVER_TIMER,
                                                       DNS_URL_RESOLVER_TIMER)
except ImportError:
    from pnp.infra.api.platform_constants import (CCO_URL_RESOLVER_TIMER,
                                                  DNS_URL_RESOLVER_TIMER)

################################################################################
#
# Security constants
#
################################################################################
# Set available SSL protocols and ciphers based off platform
try:
    from pnp_platform.infra.platform_constants import (CSDL_CIPHERS,
                                                       CSDL_SSL_CHECK_HOSTNAME,
                                                       CSDL_SSL_PROTOCOL)
except ImportError:
    from pnp.infra.api.platform_constants import (CSDL_CIPHERS,
                                                  CSDL_SSL_CHECK_HOSTNAME,
                                                  CSDL_SSL_PROTOCOL)

# Set flag to enable/disable loading of default OpenSSL certificates when
# creating an SSLContext
try:
    from pnp_platform.infra.platform_constants import DEFAULT_CERTS_ENABLED
except ImportError:
    from pnp.infra.api.platform_constants import DEFAULT_CERTS_ENABLED

# Embedded Certificates
CCO_CERT = 'cco_ca.pem'
CISCO_ROOT_CERT = 'crcam1.pem'
TRUSTPOOL_BUNDLE_SIGNER = 'RootBundlerSigner.cer'
EMBEDDED_CERTS = [CCO_CERT, CISCO_ROOT_CERT, TRUSTPOOL_BUNDLE_SIGNER]

# NTP Servers
PNP_NTP_SERVER = 'time-pnp.cisco.com.'
POOL_NTP_SERVER = 'pool.ntp.org.'

#Trustpool URL
PNP_SERVER_TRUSTPOOL_PATH = '/ca/trustpool'
PNP_SERVER_TRUSTPOOL_PATH_PREFIX = 'http://'

################################################################################
#
# Supported Infra API names
#
################################################################################
PNP_INFRA_CLOCKSYNC = 'ClockSync'
PNP_INFRA_DEVICE = 'Device'
PNP_INFRA_EVENT = 'Event'
PNP_INFRA_SUDI = 'SUDI'
PNP_INFRA_USERAUTH = 'UserAuth'
PNP_INFRA_VRF = 'VRF'
PNP_INFRA_WLC = 'WLC'
PNP_INFRA_SCRIPTEXEC = 'ScriptExec'
PNP_INFRA_VBOND = 'VBond'
PNP_INFRA_CDP = 'CDP'

PNP_INFRA_API_LIST = (
    PNP_INFRA_CLOCKSYNC,
    PNP_INFRA_DEVICE,
    PNP_INFRA_EVENT,
    PNP_INFRA_SUDI,
    PNP_INFRA_USERAUTH,
    PNP_INFRA_VRF,
    PNP_INFRA_WLC,
    PNP_INFRA_SCRIPTEXEC,
    PNP_INFRA_VBOND
)

################################################################################
#
# Supported Service Names
#
################################################################################
PNP_SERVICE_BACKOFF = 'backoff'
PNP_SERVICE_CAPABILITY = 'capability'
PNP_SERVICE_CERTIFICATE_INSTALL = 'certificate_install'
PNP_SERVICE_CLI_CONFIG = 'cli_config'
PNP_SERVICE_CLI_EXEC = 'cli_exec'
PNP_SERVICE_CONFIG_UPGRADE = 'config_upgrade'
PNP_SERVICE_DEVICE_AUTH = 'device_auth'
PNP_SERVICE_DEVICE_ID_CERT = 'device_id_cert'
PNP_SERVICE_DEVICE_INFO = 'device_info'
PNP_SERVICE_EEM_PROXY = 'eem_proxy'
PNP_SERVICE_FILE_TRANSFER = 'file_transfer'
PNP_SERVICE_IMAGE_INSTALL = 'image_install'
PNP_SERVICE_INTERFACE_INFO = 'interface_info'
PNP_SERVICE_LICENSING = 'licensing'
PNP_SERVICE_LOCATION = 'location'
PNP_SERVICE_NAPP = 'napp'
PNP_SERVICE_REDIRECTION = 'redirection'
PNP_SERVICE_RELOAD = 'reload'
PNP_SERVICE_SCRIPT = 'script'
PNP_SERVICE_SMU = 'smu'
PNP_SERVICE_SNMP = 'snmp'
PNP_SERVICE_SNOOPING = 'snooping'
PNP_SERVICE_SYSLOG = 'syslog'
PNP_SERVICE_TOPOLOGY = 'topology'
PNP_SERVICE_TAG = 'tag'


PNP_SERVICES_MASTER_LIST = (PNP_SERVICE_BACKOFF,
                            PNP_SERVICE_CAPABILITY,
                            PNP_SERVICE_CERTIFICATE_INSTALL,
                            PNP_SERVICE_CLI_CONFIG,
                            PNP_SERVICE_CLI_EXEC,
                            PNP_SERVICE_CONFIG_UPGRADE,
                            PNP_SERVICE_DEVICE_AUTH,
                            PNP_SERVICE_DEVICE_ID_CERT,
                            PNP_SERVICE_DEVICE_INFO,
                            PNP_SERVICE_EEM_PROXY,
                            PNP_SERVICE_FILE_TRANSFER,
                            PNP_SERVICE_IMAGE_INSTALL,
                            PNP_SERVICE_INTERFACE_INFO,
                            PNP_SERVICE_LICENSING,
                            PNP_SERVICE_LOCATION,
                            PNP_SERVICE_NAPP,
                            PNP_SERVICE_REDIRECTION,
                            PNP_SERVICE_RELOAD,
                            PNP_SERVICE_SCRIPT,
                            PNP_SERVICE_SMU,
                            PNP_SERVICE_SNMP,
                            PNP_SERVICE_SNOOPING,
                            PNP_SERVICE_SYSLOG,
                            PNP_SERVICE_TOPOLOGY,
                            PNP_SERVICE_TAG)

################################################################################
#
# Etc.
#
################################################################################
# Status codes for PnP Services
SERVICE_NEVER_RUN = 0
SERVICE_UNSUPPORTED = 1
SERVICE_SUCCESS = 2
SERVICE_FAILURE = 3


def service_status_to_string(status_code_str):
    """convert service status code to string"""
    status_code = int(status_code_str)
    if status_code == 0:
        return "Never Run"
    elif status_code == 1:
        return "Unsupported"
    elif status_code == 2:
        return "Success"
    elif status_code == 3:
        return "Failure"
    else:
        return "Unrecognized status code"


def cbtype_to_string(status_code_str):
    """convert cbtype status code to string"""
    status_code = int(status_code_str)
    if status_code == CBTYPE_USER:
        return "User input"
    elif status_code == CBTYPE_DHCP:
        return "DHCP Discovery"
    elif status_code == CBTYPE_DNS:
        return "DNS Discovery"
    elif status_code == CBTYPE_CCO:
        return "CCO Discovery"
    else:
        return "Unrecognized status code"
