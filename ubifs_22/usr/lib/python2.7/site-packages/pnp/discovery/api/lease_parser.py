################################################################################
# Copyright (c) 2015-17 by Cisco Systems, Inc.
# All rights reserved.
#
# Author: Shaurin Desai <shaurdes@cisco.com>
################################################################################
"""PnP Discovery API: Lease Parser

This API is MANDATORY to implement in order to support PnP DHCP Discovery and
PnP DNS Discovery mechanisms. It is responsible for retrieving DHCP option
strings from the system's DHCP lease.

The pnp_platform library must make the get_option_strings function
implementation available in pnp_platform.discovery.lease_parser to enable API
calls from pnp.

"""

import pnp.infra.utils.pnp_constants as consts

# possible parameters for get_option_strings call
# Option Vendor-specific information: DHCPv4 Opt43, DHCPv6 Opt17
# Option Domain Name: DHCPv4 Opt15, DHCPv6 Opt24
VALID_OPTIONS = ('vendor-specific-information', 'domain-name')
VALID_PROTOCOLS = (consts.PNP_ADDRTYPE_IPV4, consts.PNP_ADDRTYPE_IPV6)


def get_option_strings(option, protocol=consts.PNP_ADDRTYPE_IPV4):
    """Retrieves specified option string from DHCP lease for specified protocol.

    Args:
        option (str): Name of DHCP option to retrieve.
        protocol (str, optional): Which DHCP protocol version to retrieve
            option from. For DHCPv6, stateless (SLAAC) or stateful configuration
            makes no difference to PnP. Defaults to 'ipv4'.

    Returns:
         list(str): List of option string(s) retrieved from DHCP lease(s) for
            specified option and protocol. Sequence of option strings will
            determine their precedence. Upon error, empty list is returned.

    """
    if not _validate_input(option, protocol):
        return []
    option_strings = _find_opt_string(option, protocol)
    return option_strings


def _validate_input(option, protocol):
    return option in VALID_OPTIONS and protocol in VALID_PROTOCOLS


def _find_opt_string(option, protocol):
    print "Finding option %s for protocol %s ..." % (option, protocol)
    return []
